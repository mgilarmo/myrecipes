{"ast":null,"code":"import youtube from '../apis/youtube';\nimport { FETCH_VIDEOS, SEARCHING_RECIPES, SELECT_RECIPE_CARD, SIGN_IN, SIGN_OUT, TOGGLE_BOOLEAN } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const searchingRecipes = term => {\n  return {\n    type: SEARCHING_RECIPES,\n    payload: term\n  }; // set selectedRecipeID: '', videos=[], showAllRecipes=false\n};\nexport const toggleBoolean = stateToToggle => (dispatch, getState) => {\n  const newState = getState().stateToToggle ? false : true;\n  dispatch({\n    type: TOGGLE_BOOLEAN,\n    payload: {\n      state: [stateToToggle],\n      stateChange: newState\n    }\n  });\n};\nexport const showRecipeAndVideos = (id, name) => async dispatch => {\n  dispatch(selectRecipeCard(id, name));\n  await dispatch(fetchYouTubeVideos(name));\n};\nexport const selectRecipeCard = (id, name) => {\n  return {\n    type: SELECT_RECIPE_CARD,\n    payload: {\n      id,\n      name\n    }\n  };\n};\nexport const fetchYouTubeVideos = name => dispatch => {\n  const response = youtube.get('/search', {\n    params: {\n      q: name\n    }\n  });\n  dispatch({\n    type: FETCH_VIDEOS,\n    payload: response\n  });\n};","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/actions/actions.js"],"names":["youtube","FETCH_VIDEOS","SEARCHING_RECIPES","SELECT_RECIPE_CARD","SIGN_IN","SIGN_OUT","TOGGLE_BOOLEAN","signIn","userId","type","payload","signOut","searchingRecipes","term","toggleBoolean","stateToToggle","dispatch","getState","newState","state","stateChange","showRecipeAndVideos","id","name","selectRecipeCard","fetchYouTubeVideos","response","get","params","q"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,SACEC,YADF,EAEEC,iBAFF,EAGEC,kBAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,cANF,QAOO,SAPP;AASA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEL,OADD;AAELM,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMO,gBAAgB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACLJ,IAAAA,IAAI,EAAEP,iBADD;AAELQ,IAAAA,OAAO,EAAEG;AAFJ,GAAP,CADwC,CAKxC;AACD,CANM;AAQP,OAAO,MAAMC,aAAa,GAAIC,aAAD,IAAmB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtE,QAAMC,QAAQ,GAAGD,QAAQ,GAAGF,aAAX,GAA2B,KAA3B,GAAmC,IAApD;AACAC,EAAAA,QAAQ,CAAC;AACPP,IAAAA,IAAI,EAAEH,cADC;AAEPI,IAAAA,OAAO,EAAE;AACPS,MAAAA,KAAK,EAAE,CAACJ,aAAD,CADA;AAEPK,MAAAA,WAAW,EAAEF;AAFN;AAFF,GAAD,CAAR;AAOD,CATM;AAWP,OAAO,MAAMG,mBAAmB,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAc,MAAOP,QAAP,IAAoB;AACnEA,EAAAA,QAAQ,CAACQ,gBAAgB,CAACF,EAAD,EAAKC,IAAL,CAAjB,CAAR;AACA,QAAMP,QAAQ,CAACS,kBAAkB,CAACF,IAAD,CAAnB,CAAd;AACD,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAG,CAACF,EAAD,EAAKC,IAAL,KAAc;AAC5C,SAAO;AACLd,IAAAA,IAAI,EAAEN,kBADD;AAELO,IAAAA,OAAO,EAAE;AAACY,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAIF,IAAD,IAAWP,QAAD,IAAc;AACxD,QAAMU,QAAQ,GAAG1B,OAAO,CAAC2B,GAAR,CACf,SADe,EACJ;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAEN;AADG;AADC,GADI,CAAjB;AAOAP,EAAAA,QAAQ,CAAC;AAACP,IAAAA,IAAI,EAAER,YAAP;AAAqBS,IAAAA,OAAO,EAAEgB;AAA9B,GAAD,CAAR;AACD,CATM","sourcesContent":["import youtube from '../apis/youtube';\n\nimport {\n  FETCH_VIDEOS,\n  SEARCHING_RECIPES, \n  SELECT_RECIPE_CARD,\n  SIGN_IN, \n  SIGN_OUT, \n  TOGGLE_BOOLEAN, \n} from './types';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\nexport const searchingRecipes = (term) => {\n  return {\n    type: SEARCHING_RECIPES,\n    payload: term\n  };\n  // set selectedRecipeID: '', videos=[], showAllRecipes=false\n};\n\nexport const toggleBoolean = (stateToToggle) => (dispatch, getState) => {\n  const newState = getState().stateToToggle ? false : true;\n  dispatch({\n    type: TOGGLE_BOOLEAN, \n    payload: {\n      state: [stateToToggle], \n      stateChange: newState\n    }\n  })\n};\n\nexport const showRecipeAndVideos = (id, name) => async (dispatch) => {\n  dispatch(selectRecipeCard(id, name));\n  await dispatch(fetchYouTubeVideos(name));\n};\n\nexport const selectRecipeCard = (id, name) => {\n  return {\n    type: SELECT_RECIPE_CARD,\n    payload: {id, name}\n  };\n};\n\nexport const fetchYouTubeVideos = (name) => (dispatch) => {\n  const response = youtube.get(\n    '/search', {\n      params: {\n        q: name\n      }\n    }\n  );\n  dispatch({type: FETCH_VIDEOS, payload: response});\n};\n"]},"metadata":{},"sourceType":"module"}