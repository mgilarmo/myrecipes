{"ast":null,"code":"import youtube from '../apis/youtube';\nimport Firebase from '../apis/firebase';\nimport app from 'firebase/app';\nimport { ADD_FIREBASE_TO_STORE, CREATE_RECIPE, DELETE_RECIPE, EDIT_RECIPE, FETCH_RECIPES, FETCH_VIDEOS, GENERIC, INITIALIZE_FIREBASE, SEARCHING_RECIPES, SELECT_RECIPE_CARD, SIGN_IN, SIGN_OUT, TOGGLE_BOOLEAN } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const searchingRecipes = term => {\n  return {\n    type: SEARCHING_RECIPES,\n    payload: term\n  };\n};\nexport const toggleBoolean = stateToToggle => (dispatch, getState) => {\n  const newState = getState().ui[stateToToggle] ? false : true;\n\n  if (stateToToggle === 'showAllRecipes') {\n    dispatch({\n      type: GENERIC,\n      payload: {\n        term: '',\n        selectedRecipeId: '',\n        selectedRecipeName: '',\n        videos: []\n      }\n    });\n  }\n\n  return dispatch({\n    type: TOGGLE_BOOLEAN,\n    payload: {\n      state: [stateToToggle],\n      stateChange: newState\n    }\n  });\n};\nexport const showRecipeAndVideos = (id, name) => dispatch => {\n  dispatch(selectRecipeCard(id, name));\n  dispatch(fetchYouTubeVideos(name));\n};\nexport const selectRecipeCard = (id, name) => {\n  return {\n    type: SELECT_RECIPE_CARD,\n    payload: {\n      id,\n      name\n    }\n  };\n};\nexport const fetchYouTubeVideos = name => async dispatch => {\n  const response = await youtube.get('/search', {\n    params: {\n      q: name\n    }\n  });\n  return dispatch({\n    type: FETCH_VIDEOS,\n    payload: response.data.items\n  });\n}; // USING PROMISE WITH .THEN()\n// export const fetchYouTubeVideos = (name) => (dispatch) => {\n//   return fetch(`https://www.googleapis.com/youtube/v3/search?q=${name}&part=snippet&maxResults=5&key=AIzaSyD6Stv0Gvx3yjZCG34Jc4PcKL2FCbkLIkw`)\n//   .then((res) => {\n//     return res.json()\n//   })\n//   .then((res) => {\n//     console.log(res)\n//   })\n//   .catch((err) => {\n//     console.log(err)\n//   })\n// }\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqEZartVLP4lj1lXTbeIsXdhObqb7e85A\",\n  authDomain: \"myrecipes-53223.firebaseapp.com\",\n  databaseURL: \"https://myrecipes-53223.firebaseio.com\",\n  projectId: \"myrecipes-53223\",\n  storageBucket: \"myrecipes-53223.appspot.com\",\n  messagingSenderId: \"10245129962\",\n  appId: \"1:10245129962:web:2f91a6dd47aafb57\"\n};\nexport const initializeFirebase = () => async dispatch => {\n  const init = await app.initializeApp(firebaseConfig);\n  const recipes = init.database().ref('recipes');\n  recipes.on('child_added', data => {\n    dispatch({\n      type: CREATE_RECIPE,\n      payload: data.val()\n    });\n  });\n  dispatch({\n    type: ADD_FIREBASE_TO_STORE,\n    payload: init\n  }); // dispatch(fetchRecipes(init))\n};\nexport const createRecipe = formValues => async (dispatch, getState) => {\n  const recipes = getState().recipes.firebase.database().ref('recipes');\n  console.log(formValues);\n  const update = {};\n  Object.keys(formValues).forEach(key => {\n    if (typeof formValues[key] === 'object') {\n      update[key] = Object.values(formValues[key]);\n    } else {\n      update[key] = formValues[key];\n    }\n  });\n  await recipes.set(update); // dispatch({type: CREATE_RECIPE, payload: response})\n};\nexport const editRecipe = (id, formValues) => async dispatch => {\n  const response = await Firebase.recipe(id).set(formValues);\n  dispatch({\n    type: EDIT_RECIPE,\n    payload: response\n  });\n};\nexport const deleteRecipe = id => async dispatch => {\n  await Firebase.recipe(id);\n  dispatch({\n    type: DELETE_RECIPE,\n    payload: id\n  });\n};\nexport const fetchRecipes = firebase => async dispatch => {\n  const recipes = [];\n  const response = await firebase.database().ref('recipes').once('value', snapshot => {\n    snapshot.forEach(ele => {\n      recipes.push(ele.val());\n    });\n  });\n  dispatch({\n    type: FETCH_RECIPES,\n    payload: recipes\n  });\n};","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/actions/actions.js"],"names":["youtube","Firebase","app","ADD_FIREBASE_TO_STORE","CREATE_RECIPE","DELETE_RECIPE","EDIT_RECIPE","FETCH_RECIPES","FETCH_VIDEOS","GENERIC","INITIALIZE_FIREBASE","SEARCHING_RECIPES","SELECT_RECIPE_CARD","SIGN_IN","SIGN_OUT","TOGGLE_BOOLEAN","signIn","userId","type","payload","signOut","searchingRecipes","term","toggleBoolean","stateToToggle","dispatch","getState","newState","ui","selectedRecipeId","selectedRecipeName","videos","state","stateChange","showRecipeAndVideos","id","name","selectRecipeCard","fetchYouTubeVideos","response","get","params","q","data","items","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeFirebase","init","initializeApp","recipes","database","ref","on","val","createRecipe","formValues","firebase","console","log","update","Object","keys","forEach","key","values","set","editRecipe","recipe","deleteRecipe","fetchRecipes","once","snapshot","ele","push"],"mappings":"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","sourcesContent":["import youtube from '../apis/youtube';\nimport Firebase from '../apis/firebase';\nimport app from 'firebase/app';\n\nimport {\n  ADD_FIREBASE_TO_STORE,\n  CREATE_RECIPE,\n  DELETE_RECIPE,\n  EDIT_RECIPE,\n  FETCH_RECIPES,\n  FETCH_VIDEOS,\n  GENERIC,\n  INITIALIZE_FIREBASE,\n  SEARCHING_RECIPES, \n  SELECT_RECIPE_CARD,\n  SIGN_IN, \n  SIGN_OUT, \n  TOGGLE_BOOLEAN, \n} from './types';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\nexport const searchingRecipes = (term) => {\n  return {\n    type: SEARCHING_RECIPES,\n    payload: term\n  };\n};\n\nexport const toggleBoolean = (stateToToggle) => (dispatch, getState) => {\n  const newState = getState().ui[stateToToggle] ? false : true;\n\n  if (stateToToggle === 'showAllRecipes') {\n    dispatch({\n      type: GENERIC,\n      payload: {\n        term: '',\n        selectedRecipeId: '',\n        selectedRecipeName: '',\n        videos: []\n      }\n    })\n  }\n  return dispatch({\n    type: TOGGLE_BOOLEAN, \n    payload: {\n      state: [stateToToggle], \n      stateChange: newState\n    }\n  })\n};\n\nexport const showRecipeAndVideos = (id, name) => (dispatch) => {\n  dispatch(selectRecipeCard(id, name));\n  dispatch(fetchYouTubeVideos(name));\n};\n\nexport const selectRecipeCard = (id, name) => {\n  return {\n    type: SELECT_RECIPE_CARD,\n    payload: {id, name}\n  };\n};\n\nexport const fetchYouTubeVideos = (name) => async (dispatch) => {\n  const response = await youtube.get(\n    '/search', {\n      params: {\n        q: name\n      }\n    }\n  );\n  return dispatch({type: FETCH_VIDEOS, payload: response.data.items});\n};\n\n\n// USING PROMISE WITH .THEN()\n// export const fetchYouTubeVideos = (name) => (dispatch) => {\n//   return fetch(`https://www.googleapis.com/youtube/v3/search?q=${name}&part=snippet&maxResults=5&key=AIzaSyD6Stv0Gvx3yjZCG34Jc4PcKL2FCbkLIkw`)\n//   .then((res) => {\n//     return res.json()\n//   })\n//   .then((res) => {\n//     console.log(res)\n//   })\n//   .catch((err) => {\n//     console.log(err)\n//   })\n// }\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBqEZartVLP4lj1lXTbeIsXdhObqb7e85A\",\n  authDomain: \"myrecipes-53223.firebaseapp.com\",\n  databaseURL: \"https://myrecipes-53223.firebaseio.com\",\n  projectId: \"myrecipes-53223\",\n  storageBucket: \"myrecipes-53223.appspot.com\",\n  messagingSenderId: \"10245129962\",\n  appId: \"1:10245129962:web:2f91a6dd47aafb57\"\n};\n\n\nexport const initializeFirebase = () => async (dispatch) => {\n  const init = await app.initializeApp(firebaseConfig);\n  const recipes = init.database().ref('recipes');\n\n  recipes.on('child_added', (data) => {\n    dispatch({ type: CREATE_RECIPE, payload: data.val()})\n  })\n\n  dispatch({ type: ADD_FIREBASE_TO_STORE, payload: init })\n\n  // dispatch(fetchRecipes(init))\n}\n\nexport const createRecipe = (formValues) => async (dispatch, getState) => {\n  const recipes = getState().recipes.firebase.database().ref('recipes')\n  console.log(formValues)\n  const update = {}\n  Object.keys(formValues).forEach((key) => {\n    if (typeof formValues[key] === 'object'){\n      update[key] = Object.values(formValues[key])\n    } else {\n      update[key] = formValues[key]\n    }\n  })\n\n  await recipes.set(update);\n  // dispatch({type: CREATE_RECIPE, payload: response})\n};\n\nexport const editRecipe = (id, formValues) => async (dispatch) => {\n  const response = await Firebase.recipe(id).set(formValues);\n  dispatch({type: EDIT_RECIPE, payload: response})\n};\n\nexport const deleteRecipe = (id) => async (dispatch) => {\n  await Firebase.recipe(id);\n  dispatch({type: DELETE_RECIPE, payload: id})\n};\n\nexport const fetchRecipes = (firebase) => async (dispatch) => {\n  const recipes = [];\n  const response = await firebase.database().ref('recipes').once('value', (snapshot) => {\n    snapshot.forEach((ele) => {\n      recipes.push(ele.val())\n    })\n  });\n  dispatch({type: FETCH_RECIPES, payload: recipes})\n};\n"]},"metadata":{},"sourceType":"module"}