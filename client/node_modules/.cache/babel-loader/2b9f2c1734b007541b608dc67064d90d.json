{"ast":null,"code":"import youtube from '../apis/youtube';\nimport { FETCH_VIDEOS, SEARCHING_RECIPES, SELECT_RECIPE_CARD, SIGN_IN, SIGN_OUT, TOGGLE_BOOLEAN } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const searchingRecipes = term => {\n  return {\n    type: SEARCHING_RECIPES,\n    payload: term\n  }; // set selectedRecipeID: '', videos=[], showAllRecipes=false\n};\nexport const toggleBoolean = stateToToggle => (dispatch, getState) => {\n  const newState = getState().ui[stateToToggle] ? false : true;\n  return dispatch({\n    type: TOGGLE_BOOLEAN,\n    payload: {\n      state: [stateToToggle],\n      stateChange: newState\n    }\n  });\n};\nexport const showRecipeAndVideos = (id, name) => dispatch => {\n  dispatch(selectRecipeCard(id, name));\n  dispatch(fetchYouTubeVideos(name));\n};\nexport const selectRecipeCard = (id, name) => {\n  return {\n    type: SELECT_RECIPE_CARD,\n    payload: {\n      id,\n      name\n    }\n  };\n};\nconst YOUTUBE_KEY = 'AIzaSyD6Stv0Gvx3yjZCG34Jc4PcKL2FCbkLIkw'; // export default axios.create({\n//   baseURL: 'https://googleapis.com/youtube/v3',\n//   params: {\n//     part: 'snippet',\n//     maxResults: 5,\n//     key: YOUTUBE_KEY\n//   }\n// });\n// export const fetchYouTubeVideos = (name) => async (dispatch) => {\n//   console.log(name, youtube);\n//   // const response = await youtube.get(\n//   //   '/search', {\n//   //     params: {\n//   //       q: name\n//   //     }\n//   //   }\n//   // );\n//   let response;\n//   try {\n//     response = await youtube.get('/search', {\n//       params: {\n//         q: name\n//       }\n//     });\n//   } catch (e) {\n//     console.log('>>>>>>>>>>>>>>>',e)\n//   }\n//   return dispatch({type: FETCH_VIDEOS, payload: []});\n// };\n\nexport const fetchYouTubeVideos = name => dispatch => {\n  return fetch(\"https://www.googleapis.com/youtube/v3/search?q=\".concat(name, \"&part=snippet&maxResults=5&key=AIzaSyD6Stv0Gvx3yjZCG34Jc4PcKL2FCbkLIkw\")).then(res => {\n    return res.json();\n  }).then(res => {\n    console.log(res);\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/actions/actions.js"],"names":["youtube","FETCH_VIDEOS","SEARCHING_RECIPES","SELECT_RECIPE_CARD","SIGN_IN","SIGN_OUT","TOGGLE_BOOLEAN","signIn","userId","type","payload","signOut","searchingRecipes","term","toggleBoolean","stateToToggle","dispatch","getState","newState","ui","state","stateChange","showRecipeAndVideos","id","name","selectRecipeCard","fetchYouTubeVideos","YOUTUBE_KEY","fetch","then","res","json","console","log","catch","err"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,SACEC,YADF,EAEEC,iBAFF,EAGEC,kBAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,cANF,QAOO,SAPP;AASA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEL,OADD;AAELM,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMO,gBAAgB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACLJ,IAAAA,IAAI,EAAEP,iBADD;AAELQ,IAAAA,OAAO,EAAEG;AAFJ,GAAP,CADwC,CAKxC;AACD,CANM;AAQP,OAAO,MAAMC,aAAa,GAAIC,aAAD,IAAmB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtE,QAAMC,QAAQ,GAAGD,QAAQ,GAAGE,EAAX,CAAcJ,aAAd,IAA+B,KAA/B,GAAuC,IAAxD;AACA,SAAOC,QAAQ,CAAC;AACdP,IAAAA,IAAI,EAAEH,cADQ;AAEdI,IAAAA,OAAO,EAAE;AACPU,MAAAA,KAAK,EAAE,CAACL,aAAD,CADA;AAEPM,MAAAA,WAAW,EAAEH;AAFN;AAFK,GAAD,CAAf;AAOD,CATM;AAWP,OAAO,MAAMI,mBAAmB,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAeR,QAAD,IAAc;AAC7DA,EAAAA,QAAQ,CAACS,gBAAgB,CAACF,EAAD,EAAKC,IAAL,CAAjB,CAAR;AACAR,EAAAA,QAAQ,CAACU,kBAAkB,CAACF,IAAD,CAAnB,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAG,CAACF,EAAD,EAAKC,IAAL,KAAc;AAC5C,SAAO;AACLf,IAAAA,IAAI,EAAEN,kBADD;AAELO,IAAAA,OAAO,EAAE;AAACa,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAFJ,GAAP;AAID,CALM;AAOP,MAAMG,WAAW,GAAG,yCAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,OAAO,MAAMD,kBAAkB,GAAIF,IAAD,IAAWR,QAAD,IAAc;AACxD,SAAOY,KAAK,0DAAmDJ,IAAnD,4EAAL,CACNK,IADM,CACAC,GAAD,IAAS;AACb,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,GAHM,EAINF,IAJM,CAIAC,GAAD,IAAS;AACbE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,GANM,EAONI,KAPM,CAOCC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GATM,CAAP;AAUD,CAXM","sourcesContent":["import youtube from '../apis/youtube';\n\nimport {\n  FETCH_VIDEOS,\n  SEARCHING_RECIPES, \n  SELECT_RECIPE_CARD,\n  SIGN_IN, \n  SIGN_OUT, \n  TOGGLE_BOOLEAN, \n} from './types';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\nexport const searchingRecipes = (term) => {\n  return {\n    type: SEARCHING_RECIPES,\n    payload: term\n  };\n  // set selectedRecipeID: '', videos=[], showAllRecipes=false\n};\n\nexport const toggleBoolean = (stateToToggle) => (dispatch, getState) => {\n  const newState = getState().ui[stateToToggle] ? false : true;\n  return dispatch({\n    type: TOGGLE_BOOLEAN, \n    payload: {\n      state: [stateToToggle], \n      stateChange: newState\n    }\n  })\n};\n\nexport const showRecipeAndVideos = (id, name) => (dispatch) => {\n  dispatch(selectRecipeCard(id, name));\n  dispatch(fetchYouTubeVideos(name));\n};\n\nexport const selectRecipeCard = (id, name) => {\n  return {\n    type: SELECT_RECIPE_CARD,\n    payload: {id, name}\n  };\n};\n\nconst YOUTUBE_KEY = 'AIzaSyD6Stv0Gvx3yjZCG34Jc4PcKL2FCbkLIkw';\n\n// export default axios.create({\n//   baseURL: 'https://googleapis.com/youtube/v3',\n//   params: {\n//     part: 'snippet',\n//     maxResults: 5,\n//     key: YOUTUBE_KEY\n//   }\n// });\n// export const fetchYouTubeVideos = (name) => async (dispatch) => {\n//   console.log(name, youtube);\n//   // const response = await youtube.get(\n//   //   '/search', {\n//   //     params: {\n//   //       q: name\n//   //     }\n//   //   }\n//   // );\n//   let response;\n//   try {\n//     response = await youtube.get('/search', {\n//       params: {\n//         q: name\n//       }\n//     });\n    \n//   } catch (e) {\n//     console.log('>>>>>>>>>>>>>>>',e)\n//   }\n\n//   return dispatch({type: FETCH_VIDEOS, payload: []});\n// };\n\nexport const fetchYouTubeVideos = (name) => (dispatch) => {\n  return fetch(`https://www.googleapis.com/youtube/v3/search?q=${name}&part=snippet&maxResults=5&key=AIzaSyD6Stv0Gvx3yjZCG34Jc4PcKL2FCbkLIkw`)\n  .then((res) => {\n    return res.json()\n  })\n  .then((res) => {\n    console.log(res)\n  })\n  .catch((err) => {\n    console.log(err)\n  })\n}"]},"metadata":{},"sourceType":"module"}