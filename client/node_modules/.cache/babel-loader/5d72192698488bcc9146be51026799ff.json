{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/src/components/header/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../../actions/actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '2188948958-loaugbbo8gv937a353oq65if9rrukf06.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return React.createElement(\"button\", {\n        onClick: this.auth.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Sign Out\");\n    } else {\n      return React.createElement(\"button\", {\n        onClick: this.auth.signIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Sign In\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn.get()\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/components/header/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onAuthChange","props","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","listen","renderAuthButton","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAgBC,OAAhB,QAA8B,uBAA9B;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAACC,MAAAA,UAAU,EAAE;AAAb,KAD+B;;AAAA,SAgBvCC,YAhBuC,GAgBvBD,UAAD,IAAgB;AAC7B,UAAIA,UAAJ,EAAgB;AACd,aAAKE,KAAL,CAAWP,MAAX;AACD,OAFD,MAEO;AACL,aAAKO,KAAL,CAAWN,OAAX;AACD;AACF,KAtBsC;AAAA;;AAGvCO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAE,wEADY;AAEtBC,QAAAA,KAAK,EAAE;AAFe,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACZ,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAACf,UAAAA,UAAU,EAAE,KAAKY,IAAL,CAAUZ,UAAV,CAAqBgB,GAArB;AAAb,SAAd;AACA,aAAKJ,IAAL,CAAUZ,UAAV,CAAqBiB,MAArB,CAA4B,KAAKhB,YAAjC;AACD,OAPD;AAQD,KATD;AAUD;;AAUDiB,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKnB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClC,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,aACE;AACE,QAAA,OAAO,EAAE,KAAKY,IAAL,CAAUhB,OADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,KARM,MAQA;AACL,aACE;AACE,QAAA,OAAO,EAAE,KAAKgB,IAAL,CAAUjB,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAOD;AACF;;AAEDwB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,gBAAL,EADH,CADF;AAKD;;AApDsC;;AAuDzC,MAAME,eAAe,GAAIrB,KAAD,IAAW;AACjC,SAAO;AAACC,IAAAA,UAAU,EAAED,KAAK,CAACa,IAAN,CAAWZ,UAAX,CAAsBgB,GAAtB;AAAb,GAAP;AACD,CAFD;;AAIA,eAAetB,OAAO,CACpB0B,eADoB,EAEpB;AAACzB,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {signIn, signOut} from '../../actions/actions';\n\nclass GoogleAuth extends React.Component {\n  state = {isSignedIn: null};\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '2188948958-loaugbbo8gv937a353oq65if9rrukf06.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({isSignedIn: this.auth.isSignedIn.get()});\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      })\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn();\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return (\n        <button \n          onClick={this.auth.signOut}\n        >\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button \n          onClick={this.auth.signIn}\n        >\n          Sign In\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderAuthButton()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {isSignedIn: state.auth.isSignedIn.get()}\n};\n\nexport default connect(\n  mapStateToProps,\n  {signIn, signOut}\n)(GoogleAuth);"]},"metadata":{},"sourceType":"module"}