{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormSecondPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\n\nclass WizardFormSecondPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingred: []\n    };\n  }\n\n  addIngredient() {\n    this.setState({\n      ingred: [...this.state.ingred]\n    });\n  }\n\n  changeInput(e, i) {\n    this.state.ingred[i] = e.target.value;\n    this.setState({\n      ingred: this.state.ingred\n    });\n  }\n\n  dynamicInput() {\n    {\n      this.state.ingred.map((item, i) => {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          value: item,\n          onChange: e => this.changeInput(e, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }));\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"add-input-field\",\n      onClick: e => this.addIngredient(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), \" Add another ingredient\"), React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"ingredients\",\n      type: \"text\",\n      component: dynamicInput,\n      label: \"Ingredients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"previous\",\n      onClick: this.props.previousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Next\"))));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'recipeWizard',\n  //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(WizardFormSecondPage);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormSecondPage.js"],"names":["React","Field","reduxForm","validate","WizardFormSecondPage","Component","state","ingred","addIngredient","setState","changeInput","e","i","target","value","dynamicInput","map","item","render","props","handleSubmit","previousPage","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,oBAAN,SAAmCJ,KAAK,CAACK,SAAzC,CAAmD;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACNC,MAAAA,MAAM,EAAE;AADF,KADyC;AAAA;;AAKjDC,EAAAA,aAAa,GAAG;AACd,SAAKC,QAAL,CAAc;AAACF,MAAAA,MAAM,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf;AAAT,KAAd;AACD;;AAEDG,EAAAA,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAO;AAChB,SAAKN,KAAL,CAAWC,MAAX,CAAkBK,CAAlB,IAAuBD,CAAC,CAACE,MAAF,CAASC,KAAhC;AACA,SAAKL,QAAL,CAAc;AAACF,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAApB,KAAd;AACD;;AAEDQ,EAAAA,YAAY,GAAG;AACb;AAAC,WAAKT,KAAL,CAAWC,MAAX,CAAkBS,GAAlB,CAAsB,CAACC,IAAD,EAAOL,CAAP,KAAa;AAClC,eACE;AAAK,UAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,KAAK,EAAEK,IAAd;AAAoB,UAAA,QAAQ,EAAEN,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,EAAoBC,CAApB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OANA;AAME;AACJ;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,OAAO,EAAEP,CAAC,IAAI,KAAKH,aAAL,CAAmBG,CAAnB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,4BADF,EAIE;AAAM,MAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAEL,YAHb;AAIE,MAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAA2C,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWE,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CANF,CAJF,CADF;AAsBD;;AA/CgD;;AAkDnD,eAAenB,SAAS,CAAC;AACvBoB,EAAAA,IAAI,EAAE,cADiB;AACD;AACtBC,EAAAA,gBAAgB,EAAE,KAFK;AAGvBC,EAAAA,wBAAwB,EAAE,IAHH;AAGS;AAChCrB,EAAAA;AAJuB,CAAD,CAAT,CAKZC,oBALY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\n\n\nclass WizardFormSecondPage extends React.Component {\n  state = {\n    ingred: []\n  };\n\n  addIngredient() {\n    this.setState({ingred: [...this.state.ingred]})\n  }\n\n  changeInput(e, i) {\n    this.state.ingred[i] = e.target.value\n    this.setState({ingred: this.state.ingred})\n  }\n\n  dynamicInput() {\n    {this.state.ingred.map((item, i) => {\n      return (\n        <div key={i}>\n          <input value={item} onChange={e => this.changeInput(e, i)}/>\n        </div>\n      );\n    })}\n  }\n\n  render() {\n    return (\n      <div>\n        <label className=\"add-input-field\" onClick={e => this.addIngredient(e)}>\n          <i className=\"fa fa-plus\" /> Add another ingredient\n        </label>\n        <form onSubmit={this.props.handleSubmit}>\n          <Field \n            name=\"ingredients\" \n            type=\"text\" \n            component={dynamicInput} \n            label=\"Ingredients\" />\n          <div>\n            <button type=\"button\" className=\"previous\" onClick={this.props.previousPage}>\n              Previous\n            </button>\n            <button type=\"submit\" className=\"next\">\n              Next\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'recipeWizard', //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormSecondPage)"]},"metadata":{},"sourceType":"module"}