{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormFirstPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport renderInput from './renderInput';\nimport renderSelect from './renderSelect';\n\nconst WizardFormFirstPage = props => {\n  const handleSubmit = props.handleSubmit;\n  const typesOfMeals = ['breakfast', 'lunch', 'dinner', 'lunch or dinner', 'side dish', 'soup', 'salad', 'appetizer', 'dessert'];\n  const specialDiets = ['None', 'Vegetarian', 'Vegan', 'Gluten-free', 'Keto', 'Paleo', 'Raw Food'];\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: renderInput,\n    name: \"recipeName\",\n    type: \"text\",\n    label: \"Recipe Name\",\n    placeholder: \"Recipe Name\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderInput,\n    name: \"link\",\n    type: \"text\",\n    label: \"Link\",\n    placeholder: \"Link to website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderSelect,\n    options: typesOfMeals,\n    name: \"typeOfMeal\",\n    label: \"Type of Meal \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderInput,\n    name: \"mainIngredient\",\n    type: \"text\",\n    label: \"What's the main ingredient?\",\n    placeholder: \"main ingredient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderSelect,\n    options: specialDiets,\n    name: \"specialDiet\",\n    label: \"Type of diet \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: renderInput,\n    name: \"prepTime\",\n    type: \"tel\",\n    label: \"Prep Time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"min\"), React.createElement(Field, {\n    name: \"cookTime\",\n    type: \"tel\",\n    component: renderInput,\n    label: \"Cook Time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"hardware\",\n    type: \"text\",\n    component: renderInput,\n    label: \"Special hardware needed?\",\n    placeholder: \"roasting pan, skillet, whisk, etc.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default reduxForm({\n  form: 'wizard',\n  // <------ same form name\n  destroyOnUnmount: false,\n  // <------ preserve form data\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormFirstPage.js"],"names":["React","Field","reduxForm","validate","renderInput","renderSelect","WizardFormFirstPage","props","handleSubmit","typesOfMeals","specialDiets","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport renderInput from './renderInput';\nimport renderSelect from './renderSelect';\n\nconst WizardFormFirstPage = props => {\n  const { handleSubmit } = props\n\n  const typesOfMeals = [\n    'breakfast', \n    'lunch', \n    'dinner', \n    'lunch or dinner', \n    'side dish',\n    'soup',\n    'salad',\n    'appetizer',\n    'dessert'\n  ];\n\n  const specialDiets = [\n    'None',\n    'Vegetarian', \n    'Vegan', \n    'Gluten-free', \n    'Keto', \n    'Paleo', \n    'Raw Food'\n  ];\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field\n        component={renderInput}\n        name=\"recipeName\"\n        type=\"text\"\n        label=\"Recipe Name\"\n        placeholder=\"Recipe Name\"\n        autoFocus\n      />\n      <Field\n        component={renderInput}\n        name=\"link\"\n        type=\"text\"\n        label=\"Link\"\n        placeholder=\"Link to website\"\n      />\n      <Field \n        component={renderSelect} \n        options={typesOfMeals}\n        name=\"typeOfMeal\" \n        label=\"Type of Meal \" \n      />\n      <Field \n        component={renderInput}\n        name=\"mainIngredient\"\n        type=\"text\"\n        label=\"What's the main ingredient?\"\n        placeholder=\"main ingredient\"\n      />\n      <Field \n        component={renderSelect}\n        options={specialDiets}\n        name=\"specialDiet\" \n        label=\"Type of diet \"\n      />\n      <Field \n        component={renderInput}\n        name=\"prepTime\"\n        type=\"tel\"\n        label=\"Prep Time\"\n      >\n        min\n      </Field>\n      <Field \n        name=\"cookTime\"\n        type=\"tel\"\n        component={renderInput}\n        label=\"Cook Time\"\n      />\n      <Field \n        name=\"hardware\"\n        type=\"text\"\n        component={renderInput}\n        label=\"Special hardware needed?\"\n        placeholder=\"roasting pan, skillet, whisk, etc.\"\n      />\n\n      <div>\n        <button type=\"submit\" className=\"next\">\n          Next\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'wizard', // <------ same form name\n  destroyOnUnmount: false, // <------ preserve form data\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage)"]},"metadata":{},"sourceType":"module"}