{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormSecondPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\n\nclass WizardFormSecondPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingred: []\n    };\n\n    this.handleChange = e => {\n      if (ingred.includes(e.target.className)) {\n        let ingred = [...this.state.ingred];\n        ingred[e.target.dataset.id][e.target.className] = e.target.value;\n        this.setState(this.state.ingred, () => console.log(this.state.ingred));\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n    };\n\n    this.addIngr = e => {\n      this.setState(prevState => ({\n        ingred: [...prevState.ingred]\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"add-input-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \" Add another ingredient\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.ingred.map((val, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ingr-\".concat(i),\n        \"data-id\": i,\n        id: \"ingr-\".concat(i),\n        className: \"ingr-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"previous\",\n      onClick: this.props.previousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Next\"))));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'recipeWizard',\n  //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(WizardFormSecondPage);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormSecondPage.js"],"names":["React","Field","reduxForm","validate","WizardFormSecondPage","Component","state","ingred","handleChange","e","includes","target","className","dataset","id","value","setState","console","log","name","addIngr","prevState","handleSubmit","preventDefault","render","map","val","i","props","previousPage","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\n\n\nclass WizardFormSecondPage extends React.Component {\n  state = {\n    ingred: []\n  };\n\n  handleChange = (e) => {\n    if(ingred.includes(e.target.className)) {\n      let ingred = [...this.state.ingred];\n      ingred[e.target.dataset.id][e.target.className] = e.target.value;\n      this.setState(this.state.ingred, () => console.log(this.state.ingred))\n    } else {\n      this.setState({[e.target.name]: e.target.value})\n    }\n  };\n\n  addIngr = (e) => {\n    this.setState((prevState) => ({\n      ingred: [...prevState.ingred]\n    }))\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <label className=\"add-input-field\">\n          <i className=\"fa fa-plus\" /> Add another ingredient\n        </label>\n        <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n          {this.state.ingred.map((val, i) => {\n            return (\n              <div key={i}>\n                <input \n                  type=\"text\"\n                  name={`ingr-${i}`}\n                  data-id={i}\n                  id={`ingr-${i}`}\n                  className={`ingr-${i}`}\n                />\n              </div>\n            );\n          })}\n          <div>\n            <button type=\"button\" className=\"previous\" onClick={this.props.previousPage}>\n              Previous\n            </button>\n            <button type=\"submit\" className=\"next\">\n              Next\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'recipeWizard', //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormSecondPage)"]},"metadata":{},"sourceType":"module"}