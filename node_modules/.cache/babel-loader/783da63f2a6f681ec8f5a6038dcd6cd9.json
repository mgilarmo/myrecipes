{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormSecondPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\n\nclass WizardFormSecondPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingred: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"add-input-field\",\n      onClick: e => this.addIngredient(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), \" Add another ingredient\"), React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.state.ingred.map((val, i) => {\n      React.createElement(\"div\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ingr-\".concat(i),\n        \"data-id\": i,\n        id: \"ingr-\".concat(i),\n        className: \"ingr-\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"previous\",\n      onClick: this.props.previousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Next\"))));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'recipeWizard',\n  //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(WizardFormSecondPage);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormSecondPage.js"],"names":["React","Field","reduxForm","validate","WizardFormSecondPage","Component","state","ingred","render","e","addIngredient","props","handleSubmit","map","val","i","previousPage","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,oBAAN,SAAmCJ,KAAK,CAACK,SAAzC,CAAmD;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACNC,MAAAA,MAAM,EAAE;AADF,KADyC;AAAA;;AAKjDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,OAAO,EAAEC,CAAC,IAAI,KAAKC,aAAL,CAAmBD,CAAnB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,4BADF,EAIE;AAAM,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,GAAlB,CAAsB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACjC;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,iBAAUA,CAAV,CAFN;AAGE,mBAASA,CAHX;AAIE,QAAA,EAAE,iBAAUA,CAAV,CAJJ;AAKE,QAAA,SAAS,iBAAUA,CAAV,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVA,CADH,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAA2C,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAZF,CAJF,CADF;AA4BD;;AAlCgD;;AAqCnD,eAAed,SAAS,CAAC;AACvBe,EAAAA,IAAI,EAAE,cADiB;AACD;AACtBC,EAAAA,gBAAgB,EAAE,KAFK;AAGvBC,EAAAA,wBAAwB,EAAE,IAHH;AAGS;AAChChB,EAAAA;AAJuB,CAAD,CAAT,CAKZC,oBALY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\n\n\nclass WizardFormSecondPage extends React.Component {\n  state = {\n    ingred: []\n  };\n\n  render() {\n    return (\n      <div>\n        <label className=\"add-input-field\" onClick={e => this.addIngredient(e)}>\n          <i className=\"fa fa-plus\" /> Add another ingredient\n        </label>\n        <form onSubmit={this.props.handleSubmit}>\n          {this.state.ingred.map((val, i) => {\n            <div key={i}>\n              <input \n                type=\"text\"\n                name={`ingr-${i}`}\n                data-id={i}\n                id={`ingr-${i}`}\n                className={`ingr-${i}`}\n              />\n            </div>\n          })}\n          <div>\n            <button type=\"button\" className=\"previous\" onClick={this.props.previousPage}>\n              Previous\n            </button>\n            <button type=\"submit\" className=\"next\">\n              Next\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'recipeWizard', //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormSecondPage)"]},"metadata":{},"sourceType":"module"}