{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormFirstPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport renderInput from './renderInput';\nimport renderSelect from './renderSelect';\n\nconst WizardFormFirstPage = props => {\n  const typesOfRecipes = ['appetizer', 'bread, muffin, & scone', 'breakfast', 'dessert', 'dinner', 'drink', 'lunch', 'main dish', 'salad or dressing', 'sandwich', 'sauce', 'side dish', 'snack', 'soup, stew, or chili', 'other'];\n  const typesOfDiets = ['none', 'gluten-free', 'keto', 'paleo', 'raw food', 'vegan', 'vegetarian', 'other'];\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"recipeName\",\n    component: renderInput,\n    position: \"item-block\",\n    type: \"text\",\n    label: \"Recipe Name*\",\n    placeholder: \"Recipe Name\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"link\",\n    component: renderInput,\n    position: \"item-block\",\n    type: \"text\",\n    label: \"Link\",\n    placeholder: \"Link to website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"typeOfRecipe\",\n    component: renderSelect,\n    options: typesOfRecipes,\n    label: \"Type of Recipe*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"mainIngredient\",\n    component: renderInput,\n    type: \"text\",\n    label: \"What's the main ingredient?*\",\n    placeholder: \"main ingredient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"typeOfDiet\",\n    component: renderSelect,\n    options: typesOfDiets,\n    label: \"Type of diet*\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"prepTime\",\n    component: renderInput,\n    type: \"tel\",\n    label: \"Prep Time*\",\n    specifyUnit: \"(in min)\",\n    placeholder: \"Enter 0 if none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"cookTime\",\n    component: renderInput,\n    type: \"tel\",\n    label: \"Cook Time*\",\n    specifyUnit: \"(in min)\",\n    placeholder: \"Enter 0 if none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"hardware\",\n    component: renderInput,\n    position: \"item-block\",\n    type: \"text\",\n    label: \"Special hardware needed?\",\n    placeholder: \"roasting pan, skillet, whisk, etc.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default reduxForm({\n  form: 'recipeWizard',\n  // <------ same form name\n  destroyOnUnmount: false,\n  // <------ preserve form data\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormFirstPage.js"],"names":["React","Field","reduxForm","validate","renderInput","renderSelect","WizardFormFirstPage","props","typesOfRecipes","typesOfDiets","handleSubmit","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport validate from './validate';\nimport renderInput from './renderInput';\nimport renderSelect from './renderSelect';\n\nconst WizardFormFirstPage = props => {\n\n  const typesOfRecipes = [\n    'appetizer',\n    'bread, muffin, & scone',\n    'breakfast', \n    'dessert',\n    'dinner',\n    'drink',\n    'lunch',\n    'main dish', \n    'salad or dressing',\n    'sandwich',\n    'sauce',\n    'side dish',\n    'snack',\n    'soup, stew, or chili',\n    'other'\n  ];\n\n  const typesOfDiets = [\n    'none',\n    'gluten-free', \n    'keto', \n    'paleo', \n    'raw food',\n    'vegan', \n    'vegetarian', \n    'other'\n  ];\n  \n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        name=\"recipeName\"\n        component={renderInput}\n        position=\"item-block\"\n        type=\"text\"\n        label=\"Recipe Name*\"\n        placeholder=\"Recipe Name\"\n        autoFocus\n      />\n      <Field\n        name=\"link\"\n        component={renderInput}\n        position=\"item-block\"\n        type=\"text\"\n        label=\"Link\"\n        placeholder=\"Link to website\"\n      />\n      <Field \n        name=\"typeOfRecipe\" \n        component={renderSelect} \n        options={typesOfRecipes}\n        label=\"Type of Recipe*\" \n      />\n      <Field \n        name=\"mainIngredient\"\n        component={renderInput}\n        type=\"text\"\n        label=\"What's the main ingredient?*\"\n        placeholder=\"main ingredient\"\n      />\n      <Field \n        name=\"typeOfDiet\" \n        component={renderSelect}\n        options={typesOfDiets}\n        label=\"Type of diet*\"\n      />\n      <Field \n        name=\"prepTime\"\n        component={renderInput}\n        type=\"tel\"\n        label=\"Prep Time*\"\n        specifyUnit=\"(in min)\"\n        placeholder=\"Enter 0 if none\"\n      >\n      </Field>\n      <Field \n        name=\"cookTime\"\n        component={renderInput}\n        type=\"tel\"\n        label=\"Cook Time*\"\n        specifyUnit=\"(in min)\"\n        placeholder=\"Enter 0 if none\"\n      />\n      <Field \n        name=\"hardware\"\n        component={renderInput}\n        position=\"item-block\"\n        type=\"text\"\n        label=\"Special hardware needed?\"\n        placeholder=\"roasting pan, skillet, whisk, etc.\"\n      />\n      <div>\n        <button type=\"submit\" className=\"next\">\n          Next\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'recipeWizard', // <------ same form name\n  destroyOnUnmount: false, // <------ preserve form data\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage);"]},"metadata":{},"sourceType":"module"}