{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/client/src/components/forms/WizardFormFirstPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport renderInput from './renderInput';\nimport renderSelect from './renderSelect';\n\nconst WizardFormFirstPage = props => {\n  const typesOfMeals = ['breakfast', 'lunch', 'dinner', 'lunch or dinner', 'side dish', 'soup', 'salad', 'appetizer', 'dessert', 'other'];\n  const typesOfDiets = ['None', 'Vegetarian', 'Vegan', 'Gluten-free', 'Keto', 'Paleo', 'Raw Food', 'Other'];\n  console.log(props);\n  return React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"recipeName\",\n    component: renderInput,\n    position: \"item-block\",\n    type: \"text\",\n    label: \"Recipe Name\",\n    placeholder: \"Recipe Name\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"link\",\n    component: renderInput,\n    position: \"item-block\",\n    type: \"text\",\n    label: \"Link\",\n    placeholder: \"Link to website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"typeOfMeal\",\n    component: renderSelect,\n    options: typesOfMeals,\n    label: \"Type of Meal \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"mainIngredient\",\n    component: renderInput,\n    type: \"text\",\n    label: \"What's the main ingredient?\",\n    placeholder: \"main ingredient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"typeOfDiet\",\n    component: renderSelect,\n    options: typesOfDiets,\n    label: \"Type of diet \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"prepTime\",\n    component: renderInput,\n    type: \"tel\",\n    label: \"Prep Time\",\n    specifyUnit: \"(in min)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"cookTime\",\n    component: renderInput,\n    type: \"tel\",\n    label: \"Cook Time\",\n    specifyUnit: \"(in min)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"hardware\",\n    component: renderInput,\n    position: \"item-block\",\n    type: \"text\",\n    label: \"Special hardware needed?\",\n    placeholder: \"roasting pan, skillet, whisk, etc.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default reduxForm({\n  form: 'recipeWizard',\n  // <------ same form name\n  destroyOnUnmount: false,\n  // <------ preserve form data\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/client/src/components/forms/WizardFormFirstPage.js"],"names":["React","Field","reduxForm","validate","renderInput","renderSelect","WizardFormFirstPage","props","typesOfMeals","typesOfDiets","console","log","handleSubmit","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport renderInput from './renderInput';\nimport renderSelect from './renderSelect';\n\nconst WizardFormFirstPage = props => {\n\n  const typesOfMeals = [\n    'breakfast', \n    'lunch', \n    'dinner', \n    'lunch or dinner', \n    'side dish',\n    'soup',\n    'salad',\n    'appetizer',\n    'dessert',\n    'other'\n  ];\n\n  const typesOfDiets = [\n    'None',\n    'Vegetarian', \n    'Vegan', \n    'Gluten-free', \n    'Keto', \n    'Paleo', \n    'Raw Food',\n    'Other'\n  ];\nconsole.log(props)\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        name=\"recipeName\"\n        component={renderInput}\n        position=\"item-block\"\n        type=\"text\"\n        label=\"Recipe Name\"\n        placeholder=\"Recipe Name\"\n        autoFocus\n      />\n      <Field\n        name=\"link\"\n        component={renderInput}\n        position=\"item-block\"\n        type=\"text\"\n        label=\"Link\"\n        placeholder=\"Link to website\"\n      />\n      <Field \n        name=\"typeOfMeal\" \n        component={renderSelect} \n        options={typesOfMeals}\n        label=\"Type of Meal \" \n      />\n      <Field \n        name=\"mainIngredient\"\n        component={renderInput}\n        type=\"text\"\n        label=\"What's the main ingredient?\"\n        placeholder=\"main ingredient\"\n      />\n      <Field \n        name=\"typeOfDiet\" \n        component={renderSelect}\n        options={typesOfDiets}\n        label=\"Type of diet \"\n      />\n      <Field \n        name=\"prepTime\"\n        component={renderInput}\n        type=\"tel\"\n        label=\"Prep Time\"\n        specifyUnit=\"(in min)\"\n      >\n      </Field>\n      <Field \n        name=\"cookTime\"\n        component={renderInput}\n        type=\"tel\"\n        label=\"Cook Time\"\n        specifyUnit=\"(in min)\"\n      />\n      <Field \n        name=\"hardware\"\n        component={renderInput}\n        position=\"item-block\"\n        type=\"text\"\n        label=\"Special hardware needed?\"\n        placeholder=\"roasting pan, skillet, whisk, etc.\"\n      />\n      <div>\n        <button type=\"submit\" className=\"next\">\n          Next\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: 'recipeWizard', // <------ same form name\n  destroyOnUnmount: false, // <------ preserve form data\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage);"]},"metadata":{},"sourceType":"module"}