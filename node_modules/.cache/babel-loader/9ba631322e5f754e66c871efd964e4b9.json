{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormFirstPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport renderField from './renderField';\n\nconst WizardFormFirstPage = props => {\n  const handleSubmit = props.handleSubmit;\n  const typesOfMeals = ['breakfast', 'lunch', 'dinner', 'lunch or dinner', 'side dish', 'soup', 'salad', 'appetizer', 'dessert'];\n\n  const typeOfMealSelector = ({\n    input,\n    meta: {\n      touched,\n      error\n    }\n  }) => React.createElement(\"div\", {\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"select\", Object.assign({}, input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Select ...\"), typesOfMeals.map(val => React.createElement(\"option\", {\n    value: val,\n    key: val,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, val))), touched && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error));\n\n  const specialDiets = ['None', 'Vegetarian', 'Vegan', 'Gluten-free', 'Keto', 'Paleo', 'Raw Food'];\n\n  const specialDietSelector = ({\n    input,\n    meta: {\n      touched,\n      error\n    }\n  }) => React.createElement(\"div\", {\n    className: \"form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"select\", Object.assign({}, input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Select ...\"), specialDiets.map(val => React.createElement(\"option\", {\n    value: val,\n    key: val,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, val))), touched && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, error)); // const renderField = ({ input, label, placeholder, type, meta: { touched, error } }) => (\n  //   <div>\n  //     <label>{label}</label>\n  //     <div>\n  //       <input {...input} placeholder={placeholder} type={type} />\n  //       {touched && error && <span>{error}</span>}\n  //     </div>\n  //   </div>\n  // )\n\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"recipeName\",\n    type: \"text\",\n    component: renderField,\n    label: \"Recipe Name\",\n    placeholder: \"Recipe Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"link\",\n    type: \"text\",\n    component: renderField,\n    label: \"Link\",\n    placeholder: \"Link to website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Type of Meal\"), React.createElement(Field, {\n    name: \"typeOfMeal\",\n    component: typeOfMealSelector,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"mainIngredient\",\n    type: \"text\",\n    component: renderField,\n    label: \"What's the main ingredient?\",\n    placeholder: \"main ingredient\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Fit a special diet?\"), React.createElement(Field, {\n    name: \"typeOfMeal\",\n    component: specialDietSelector,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Field, {\n    name: \"prepTime\",\n    type: \"tel\",\n    component: renderField,\n    label: \"Prep Time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"min\"), React.createElement(Field, {\n    name: \"cookTime\",\n    type: \"tel\",\n    component: renderField,\n    label: \"Cook Time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"hardware\",\n    type: \"text\",\n    component: renderField,\n    label: \"Special hardware needed?\",\n    placeholder: \"roasting pan, skillet, whish, etc.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default reduxForm({\n  form: 'wizard',\n  // <------ same form name\n  destroyOnUnmount: false,\n  // <------ preserve form data\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormFirstPage.js"],"names":["React","Field","reduxForm","validate","renderField","WizardFormFirstPage","props","handleSubmit","typesOfMeals","typeOfMealSelector","input","meta","touched","error","map","val","specialDiets","specialDietSelector","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport renderField from './renderField';\n\nconst WizardFormFirstPage = props => {\n  const { handleSubmit } = props\n\n  const typesOfMeals = [\n    'breakfast', \n    'lunch', \n    'dinner', \n    'lunch or dinner', \n    'side dish',\n    'soup',\n    'salad',\n    'appetizer',\n    'dessert'\n  ];\n\n  const typeOfMealSelector = ({ input, meta: { touched, error } }) => (\n    <div className=\"form-field\">\n      <select {...input}>\n        <option value=\"\" disabled>Select ...</option>\n        {typesOfMeals.map(val => (\n          <option value={val} key={val}>\n            {val}\n          </option>\n        ))}\n      </select>\n      {touched && error && <span>{error}</span>}\n    </div>\n  )\n\n  const specialDiets = [\n    'None',\n    'Vegetarian', \n    'Vegan', \n    'Gluten-free', \n    'Keto', \n    'Paleo', \n    'Raw Food'\n  ];\n\n  const specialDietSelector = ({ input, meta: { touched, error } }) => (\n    <div className=\"form-field\">\n      <select {...input}>\n        <option value=\"\" disabled>Select ...</option>\n        {specialDiets.map(val => (\n          <option value={val} key={val}>\n            {val}\n          </option>\n        ))}\n      </select>\n      {touched && error && <span>{error}</span>}\n    </div>\n  )\n\n  // const renderField = ({ input, label, placeholder, type, meta: { touched, error } }) => (\n  //   <div>\n  //     <label>{label}</label>\n  //     <div>\n  //       <input {...input} placeholder={placeholder} type={type} />\n  //       {touched && error && <span>{error}</span>}\n  //     </div>\n  //   </div>\n  // )\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field\n        name=\"recipeName\"\n        type=\"text\"\n        component={renderField}\n        label=\"Recipe Name\"\n        placeholder=\"Recipe Name\"\n      />\n      <Field\n        name=\"link\"\n        type=\"text\"\n        component={renderField}\n        label=\"Link\"\n        placeholder=\"Link to website\"\n      />\n      <div>\n        <label>Type of Meal</label>\n        <Field name=\"typeOfMeal\" component={typeOfMealSelector} />\n      </div>\n      <Field \n        name=\"mainIngredient\"\n        type=\"text\"\n        component={renderField}\n        label=\"What's the main ingredient?\"\n        placeholder=\"main ingredient\"\n      />\n      <div>\n        <label>Fit a special diet?</label>\n        <Field name=\"typeOfMeal\" component={specialDietSelector} />\n      </div>\n      <Field \n        name=\"prepTime\"\n        type=\"tel\"\n        component={renderField}\n        label=\"Prep Time\"\n      >\n        min\n      </Field>\n      <Field \n        name=\"cookTime\"\n        type=\"tel\"\n        component={renderField}\n        label=\"Cook Time\"\n      />\n      <Field \n        name=\"hardware\"\n        type=\"text\"\n        component={renderField}\n        label=\"Special hardware needed?\"\n        placeholder=\"roasting pan, skillet, whish, etc.\"\n      />\n\n      <div>\n        <button type=\"submit\" className=\"next\">\n          Next\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'wizard', // <------ same form name\n  destroyOnUnmount: false, // <------ preserve form data\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage)"]},"metadata":{},"sourceType":"module"}