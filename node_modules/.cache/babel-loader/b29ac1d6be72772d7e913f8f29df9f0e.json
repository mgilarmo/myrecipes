{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormThirdPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nconst colors = ['Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Indigo', 'Violet'];\n\nconst renderColorSelector = ({\n  input,\n  meta: {\n    touched,\n    error\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"select\", Object.assign({}, input, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), React.createElement(\"option\", {\n  value: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Select a color...\"), colors.map(val => React.createElement(\"option\", {\n  value: val,\n  key: val,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, val))), touched && error && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, error));\n\nconst WizardFormThirdPage = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        previousPage = props.previousPage,\n        submitting = props.submitting;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Favorite Color\"), React.createElement(Field, {\n    name: \"favoriteColor\",\n    component: renderColorSelector,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"employed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Employed\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"employed\",\n    id: \"employed\",\n    component: \"input\",\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"notes\",\n    component: \"textarea\",\n    placeholder: \"Notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"previous\",\n    onClick: previousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Previous\"), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default reduxForm({\n  form: 'wizard',\n  //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate\n})(WizardFormThirdPage);","map":{"version":3,"sources":["/Users/matthewgilarmo/Projects/myrecipes/src/components/forms/WizardFormThirdPage.js"],"names":["React","Field","reduxForm","validate","colors","renderColorSelector","input","meta","touched","error","map","val","WizardFormThirdPage","props","handleSubmit","pristine","previousPage","submitting","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport validate from './validate'\nconst colors = ['Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Indigo', 'Violet']\n\nconst renderColorSelector = ({ input, meta: { touched, error } }) => (\n  <div>\n    <select {...input}>\n      <option value=\"\">Select a color...</option>\n      {colors.map(val => (\n        <option value={val} key={val}>\n          {val}\n        </option>\n      ))}\n    </select>\n    {touched && error && <span>{error}</span>}\n  </div>\n)\n\nconst WizardFormThirdPage = props => {\n  const { handleSubmit, pristine, previousPage, submitting } = props\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Favorite Color</label>\n        <Field name=\"favoriteColor\" component={renderColorSelector} />\n      </div>\n      <div>\n        <label htmlFor=\"employed\">Employed</label>\n        <div>\n          <Field\n            name=\"employed\"\n            id=\"employed\"\n            component=\"input\"\n            type=\"checkbox\"\n          />\n        </div>\n      </div>\n      <div>\n        <label>Notes</label>\n        <div>\n          <Field name=\"notes\" component=\"textarea\" placeholder=\"Notes\" />\n        </div>\n      </div>\n      <div>\n        <button type=\"button\" className=\"previous\" onClick={previousPage}>\n          Previous\n        </button>\n        <button type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n      </div>\n    </form>\n  )\n}\nexport default reduxForm({\n  form: 'wizard', //Form name is same\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormThirdPage)\n"]},"metadata":{},"sourceType":"module"}